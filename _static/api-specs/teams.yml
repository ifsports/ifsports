{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/api/v1/teams/":{"get":{"tags":["Teams"],"summary":"Get Teams By Campus","description":"List Teams By Campus\n\nLista as equipes, com diferentes comportamentos baseados na autenticação e no papel do usuário.\n\n- **Usuário não autenticado**: Deve fornecer o parâmetro `campus`.\n- **Usuário autenticado (Jogador)**: Lista apenas as equipes das quais o usuário faz parte no seu campus.\n- **Usuário autenticado (não Jogador)**: Lista todas as equipes do campus do usuário.\n- É possível filtrar por status da equipe (ex: `approved`, `pending`).\n\n**Exemplo de Resposta:**\n\n.. code-block:: json\n\n   [\n     {\n       \"id\": \"a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6\",\n       \"name\": \"Titãs do Futsal\",\n       \"abbreviation\": \"TTF\",\n       \"status\": \"approved\",\n       \"campus_code\": \"NAT-CN\",\n       \"members\": [\n         {\n           \"user_id\": \"20231012030011\"\n         },\n         {\n           \"user_id\": \"20231012030015\"\n         }\n       ]\n     },\n     {\n       \"id\": \"b2c3d4e5-f6a7-b8c9-d0e1-f2a3b4c5d6e7\",\n       \"name\": \"Guerreiros do Vôlei\",\n       \"abbreviation\": \"GDV\",\n       \"status\": \"pending\",\n       \"campus_code\": \"NAT-CN\",\n       \"members\": [\n         {\n           \"user_id\": \"20241012030020\"\n         }\n       ]\n     }\n   ]","operationId":"get_teams_by_campus_api_v1_teams__get","security":[{"OptionalHTTPBearer":[]}],"parameters":[{"name":"status","in":"query","required":false,"schema":{"anyOf":[{"$ref":"#/components/schemas/TeamStatusEnum"},{"type":"null"}],"description":"Filtrar equipes por status","title":"Status"},"description":"Filtrar equipes por status"},{"name":"campus","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Filtrar equipes por campus","title":"Campus"},"description":"Filtrar equipes por campus"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TeamResponse"},"title":"Response Get Teams By Campus Api V1 Teams  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["Teams"],"summary":"Create Team In Campus","description":"Create Team In Campus\n\nCria uma nova equipe e envia para aprovação. O processo envolve múltiplas validações:\n\n- Valida se os membros existem no serviço de autenticação.\n- Verifica se o nome ou abreviação já existem no campus.\n- Consulta o serviço de competições para validar a inscrição.\n- Verifica se os membros já não estão em outra equipe na mesma competição.\n- Publica uma mensagem para um processo de aprovação assíncrono.\n\n**Exemplo de Corpo da Requisição (Payload):**\n\n.. code-block:: json\n\n   {\n     \"name\": \"Fúria do Basquete\",\n     \"abbreviation\": \"FDB\",\n     \"competition_id\": \"c1d2e3f4-a5b6-7890-1234-567890abcdef\",\n     \"members\": [\n       \"20231012030011\",\n       \"20231012030015\",\n       \"20241012030022\",\n       \"20221012030001\",\n       \"20211012030005\"\n     ]\n   }\n\n**Exemplo de Resposta (202 Accepted):**\n\n.. code-block:: json\n\n   {\n     \"message\": \"Solicitação de criação de equipe enviada para aprovação!\",\n     \"team_id\": \"d4e5f6a7-b8c9-d0e1-f2a3-b4c5d6e7f8a9\"\n   }","operationId":"create_team_in_campus_api_v1_teams__post","security":[{"HTTPBearer":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TeamCreateRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/teams/{team_id}":{"get":{"tags":["Teams"],"summary":"Get Team By Id","description":"Get Team By Id\n\nRetorna os detalhes de uma equipe específica pelo seu ID.\nO acesso é restrito ao campus do usuário autenticado.\n\n**Exemplo de Resposta:**\n\n.. code-block:: json\n\n   {\n     \"id\": \"a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6\",\n     \"name\": \"Titãs do Futsal\",\n     \"abbreviation\": \"TTF\",\n     \"status\": \"approved\",\n     \"campus_code\": \"NAT-CN\",\n     \"members\": [\n       {\n         \"user_id\": \"20231012030011\"\n       },\n       {\n         \"user_id\": \"20231012030015\"\n       }\n     ]\n   }","operationId":"get_team_by_id_api_v1_teams__team_id__get","security":[{"HTTPBearer":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"string","title":"Team Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["Teams"],"summary":"Delete Team By Id","description":"Delete Team By Id\n\nEnvia uma solicitação para exclusão de uma equipe. A operação não é imediata.\n\n- Requer um motivo (`reason`) no corpo da requisição.\n- Publica uma mensagem para um processo de aprovação assíncrono.\n\n**Exemplo de Corpo da Requisição (Payload):**\n\n.. code-block:: json\n\n   {\n     \"reason\": \"A equipe foi desfeita por decisão unânime dos membros.\"\n   }\n\n**Exemplo de Resposta (202 Accepted):**\n\n.. code-block:: json\n\n   {\n     \"message\": \"Solicitação de remoção de equipe enviada para aprovação!\",\n     \"team_id\": \"a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6\"\n   }","operationId":"delete_team_by_id_api_v1_teams__team_id__delete","security":[{"HTTPBearer":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"string","title":"Team Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TeamDeleteRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/teams/{team_id}/members/":{"get":{"tags":["Team Members"],"summary":"Get Team Members By Team Id","description":"Get Team Members By Team Id\n\nObtém todos os membros de uma equipe específica.\n\n- **Autenticação**: Requer um token de usuário válido.\n- **Autorização**: O usuário autenticado deve pertencer ao grupo 'Jogador' ou 'Organizador'.\n- A busca da equipe é limitada ao campus do usuário autenticado.\n\n**Exemplo de Resposta:**\n\n.. code-block:: json\n\n   [\n     {\n       \"user_id\": \"20231012030011\",\n       \"team_id\": \"a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6\",\n       \"created_at\": \"2025-08-04T21:14:25.123Z\",\n       \"updated_at\": \"2025-08-04T21:14:25.123Z\"\n     },\n     {\n       \"user_id\": \"20231012030015\",\n       \"team_id\": \"a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6\",\n       \"created_at\": \"2025-08-04T21:15:00.456Z\",\n       \"updated_at\": \"2025-08-04T21:15:00.456Z\"\n     }\n   ]","operationId":"get_team_members_by_team_id_api_v1_teams__team_id__members__get","security":[{"HTTPBearer":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"string","title":"Team Id"}}],"responses":{"200":{"description":"Membros da equipe retornados com sucesso.","content":{"application/json":{"schema":{}}}},"403":{"description":"O usuário não tem permissão para visualizar os membros."},"404":{"description":"A equipe com o ID fornecido não foi encontrada."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["Team Members"],"summary":"Add Team Member To Team","description":"Add Team Member To Team\n\nEnvia uma solicitação para adicionar um novo membro a uma equipe.\n\n- **Autenticação**: Requer um token de usuário válido.\n- **Autorização**: O usuário solicitante deve ser membro da equipe e pertencer aos grupos 'Jogador' ou 'Organizador'.\n- **Validação**: O `user_id` do novo membro é validado contra o serviço de autenticação.\n\n**Exemplo de Corpo da Requisição (Payload):**\n\n.. code-block:: json\n\n   {\n     \"user_id\": \"20231012030020\"\n   }\n\n**Exemplo de Resposta (202 Accepted):**\n\n.. code-block:: json\n\n   {\n     \"message\": \"Solicitação de adição de membro enviada para aprovação!\",\n     \"team_id\": \"a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6\",\n     \"member_id\": \"20231012030020\"\n   }","operationId":"add_team_member_to_team_api_v1_teams__team_id__members__post","security":[{"HTTPBearer":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Team Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TeamMemberCreateRequest"}}}},"responses":{"202":{"description":"Solicitação para adicionar membro foi recebida e enviada para aprovação.","content":{"application/json":{"schema":{}}}},"400":{"description":"O usuário a ser adicionado não é válido ou não foi encontrado no serviço de autenticação."},"403":{"description":"O usuário solicitante não tem permissão para adicionar membros."},"404":{"description":"A equipe com o ID fornecido não foi encontrada."},"409":{"description":"O usuário já é um membro da equipe."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/api/v1/teams/{team_id}/members/{team_member_id}":{"delete":{"tags":["Team Members"],"summary":"Remove Team Member From Team","description":"Remove Team Member From Team\n\nEnvia uma solicitação para remover um membro de uma equipe.\n\n- **Autenticação**: Requer um token de usuário válido.\n- **Autorização**: O usuário solicitante deve ser membro da equipe e pertencer aos grupos 'Jogador' ou 'Organizador'.\n- **Corpo da Requisição**: É obrigatório fornecer um `reason` (motivo) para a remoção.\n\n**Exemplo de Corpo da Requisição (Payload):**\n\n.. code-block:: json\n\n   {\n     \"reason\": \"O membro solicitou a sua saída da equipe.\"\n   }\n\n**Exemplo de Resposta:**\n\n.. code-block:: json\n\n   {\n     \"message\": \"Solicitação de remoção de membro enviada para aprovação!\",\n     \"team_id\": \"a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6\",\n     \"member_id\": \"20231012030015\"\n   }","operationId":"remove_team_member_from_team_api_v1_teams__team_id__members__team_member_id__delete","security":[{"HTTPBearer":[]}],"parameters":[{"name":"team_id","in":"path","required":true,"schema":{"type":"string","format":"uuid","title":"Team Id"}},{"name":"team_member_id","in":"path","required":true,"schema":{"type":"string","title":"Team Member Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TeamMemberDeleteRequest"}}}},"responses":{"200":{"description":"Solicitação para remover membro foi recebida e enviada para aprovação.","content":{"application/json":{"schema":{}}}},"400":{"description":"O motivo da remoção é obrigatório e não foi fornecido."},"403":{"description":"O usuário solicitante não tem permissão para remover membros."},"404":{"description":"A equipe ou o membro não foram encontrados."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/health":{"get":{"summary":"Health Check","operationId":"health_check_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"TeamCreateRequest":{"properties":{"name":{"type":"string","title":"Name"},"abbreviation":{"type":"string","title":"Abbreviation"},"competition_id":{"type":"string","format":"uuid","title":"Competition Id"},"members":{"items":{"type":"string"},"type":"array","title":"Members"}},"type":"object","required":["name","abbreviation","competition_id","members"],"title":"TeamCreateRequest"},"TeamDeleteRequest":{"properties":{"reason":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Reason"}},"type":"object","required":["reason"],"title":"TeamDeleteRequest"},"TeamMemberCreateRequest":{"properties":{"user_id":{"type":"string","title":"User Id"}},"type":"object","required":["user_id"],"title":"TeamMemberCreateRequest"},"TeamMemberDeleteRequest":{"properties":{"reason":{"type":"string","title":"Reason"}},"type":"object","required":["reason"],"title":"TeamMemberDeleteRequest"},"TeamMemberResponse":{"properties":{"user_id":{"type":"string","title":"User Id"}},"type":"object","required":["user_id"],"title":"TeamMemberResponse"},"TeamResponse":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"name":{"type":"string","title":"Name"},"abbreviation":{"type":"string","title":"Abbreviation"},"campus_code":{"type":"string","title":"Campus Code"},"created_at":{"type":"string","format":"date-time","title":"Created At"},"status":{"$ref":"#/components/schemas/TeamStatusEnum"},"members":{"items":{"$ref":"#/components/schemas/TeamMemberResponse"},"type":"array","title":"Members"}},"type":"object","required":["id","name","abbreviation","campus_code","created_at","status","members"],"title":"TeamResponse"},"TeamStatusEnum":{"type":"string","enum":["pendent","active","closed"],"title":"TeamStatusEnum"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"OptionalHTTPBearer":{"type":"http","scheme":"bearer"},"HTTPBearer":{"type":"http","scheme":"bearer"}}}}