openapi: 3.0.3
info:
  title: Audit Service API
  version: 1.0.0
  description: Serviço responsável por registrar e auditar eventos da plataforma.
paths:
  /api/v1/campus/{campus_code}/logs/:
    get:
      operationId: v1_campus_logs_list
      description: |2

        Retorna uma lista paginada de todos os logs de auditoria associados ao `campus_code` fornecido na URL.

        **Exemplo de Resposta:**

        .. code-block:: json

           [
             {
               "id": 101,
               "timestamp": "2025-08-04T20:30:00Z",
               "campus_code": "CN",
               "user_id": "20211234567890",
               "service_origin": "competitions_service",
               "event_type": "competition.created",
               "entity_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
               "old_data": null,
               "new_data": {
                 "name": "JIFs 2025 - Futsal",
                 "status": "not-started"
               },
               "ip_address": "187.55.123.98"
             },
             {
               "id": 100,
               "timestamp": "2025-08-04T19:15:00Z",
               "campus_code": "CN",
               "user_id": "20200987654321",
               "service_origin": "auth_service",
               "event_type": "auth.login",
               "entity_id": "20200987654321",
               "old_data": null,
               "new_data": {
                 "message": "Organizador logou com sucesso."
               },
               "ip_address": "177.22.45.67"
             }
           ]
      summary: Lista os logs de auditoria de um campus
      parameters:
      - in: path
        name: campus_code
        schema:
          type: string
        description: 'O código do campus para filtrar os logs (ex: "CN", "PF").'
        required: true
      tags:
      - Auditoria
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
          description: ''
        '403':
          description: Permissão negada. Apenas organizadores podem acessar este recurso.
  /api/v1/campus/{campus_code}/logs/{id}/:
    get:
      operationId: v1_campus_logs_retrieve
      description: |2

        Retorna os detalhes de um único log de auditoria, identificado pelo seu ID.

        **Exemplo de Resposta:**

        .. code-block:: json

           {
             "id": 101,
             "timestamp": "2025-08-04T20:30:00Z",
             "campus_code": "CN",
             "user_id": "20211234567890",
             "service_origin": "competitions_service",
             "event_type": "competition.created",
             "entity_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
             "old_data": null,
             "new_data": {
               "name": "JIFs 2025 - Futsal",
               "status": "not-started"
             },
             "ip_address": "187.55.123.98"
           }
      summary: Obtém um log de auditoria específico
      parameters:
      - in: path
        name: campus_code
        schema:
          type: string
        description: O código do campus ao qual o log pertence.
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this log.
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: O ID do registro de log.
        required: true
      tags:
      - Auditoria
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
          description: ''
        '403':
          description: Permissão negada. Apenas organizadores podem acessar este recurso.
        '404':
          description: Log não encontrado com o ID especificado.
components:
  schemas:
    Log:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        timestamp:
          type: string
          format: date-time
        campus_code:
          type: string
          maxLength: 50
        user_id:
          type: string
          maxLength: 255
        service_origin:
          type: string
          maxLength: 100
        event_type:
          type: string
          maxLength: 100
        entity_id:
          type: string
          maxLength: 255
        old_data:
          nullable: true
        new_data:
          nullable: true
        ip_address:
          type: string
          nullable: true
      required:
      - campus_code
      - entity_id
      - event_type
      - id
      - service_origin
      - timestamp
      - user_id
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
